@using Sneat.MVC.Models.DTO.Role;
@using PagedList;
@using PagedList.Mvc;
@model IPagedList<RoleOutputModel>
@using Sneat.MVC.Models.DTO.User
@using Sneat.MVC.Common
@{ UserDetailOutputModel ss = (UserDetailOutputModel)HttpContext.Current.Session[SystemParam.SESSION_LOGIN];
    if (ss == null)
    {
        Response.Redirect("/Home/Login");
    }
}

<table class="table table-bordered table-striped text-center" id="dataTable" cellspacing="0">
    <thead>
        <tr>
            <th>STT</th>
            <th>Tên </th>
            <th>Người dùng</th>
            <th>Ngày tạo</th>
            <th>Action</th>
        </tr>
    </thead>

    <tbody>

        @{
            if (Model.Count() <= 0)
            {
                <tr>
                    <td colspan="8">Không có dữ liệu.</td>
                </tr>
            }
            else
            {

                int stt = ((Model.PageNumber - 1) * Model.PageSize) + 1;
                foreach (var data in Model)
                {

                    <tr>
                        <td>@stt </td>
                        <td>@data.Name</td>
                        <td>
                            <div class="d-flex align-items-center avatar-group">
                                @foreach (var user in data.UserRoles)
                                {
                                    <div class="avatar pull-up"
                                         data-bs-toggle="tooltip"
                                         data-popup="tooltip-custom"
                                         data-bs-placement="top"
                                         title="@user.UserName">
                                        <img src="@user.UserAvatar" alt="Avatar" class="rounded-circle" />
                                    </div>
                                }
                            </div>


                        </td>
                        <td>@data.CreatedDate.ToString("dd/MM/yyyy")</td>
                        <td>
                            <div class="dropdown">
                                <button type="button"
                                        class="btn p-0 dropdown-toggle hide-arrow"
                                        data-bs-toggle="dropdown">
                                    <i class="bx bx-dots-vertical-rounded"></i>
                                </button>
                                <div class="dropdown-menu">
                                    @if (ss.PermissionTabs.Contains("updateRoleTab"))
                                    {
                                        <a class="dropdown-item" data-bs-toggle="modal" data-bs-target="#updateRoleModal" onclick="updateRoleModal(@data.ID)"><i class="bx bx-edit-alt me-1"></i> Sửa vai trò</a>
                                    }
                                    @if (ss.PermissionTabs.Contains("deleteRoleTab"))
                                    {
                                        <a class="dropdown-item" onclick="deleteRole(@data.ID)"><i class="bx bx-trash me-1"></i> Xóa vai trò</a>
                                    }

                                </div>
                            </div>
                        </td>
                    </tr>
                    stt++;

                }
            }
        }

    </tbody>
</table>
<div class="col-md-12">
    <div class="row float-right">
        @*phân trang*@
        @Html.PagedListPager(Model, Page => Url.Action("SearchRole", new { Page, search = "" }),
                 PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions()
                 {
                     HttpMethod = "GET",
                     UpdateTargetId = "list_role"
                 })
                 )
    </div>
</div>
